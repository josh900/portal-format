background.js:
```
chrome.webRequest.onHeadersReceived.addListener(
  function (details) {
    for (var i = 0; i < details.responseHeaders.length; ++i) {
      if (details.responseHeaders[i].name.toLowerCase() == 'access-control-allow-origin') {
        details.responseHeaders[i].value = '*';
        break;
      }
    }
    return { responseHeaders: details.responseHeaders };
  },
  { urls: ["<all_urls>"] },
  ["blocking", "responseHeaders"]
);


```

content.js:
```
// Fetch the CSS file once and store it
var css;
fetch(chrome.runtime.getURL('jira.css'))
  .then(response => response.text())
  .then(text => {
    css = text;
  });


function openLinkInModal(link) {
  
  var modal = window.top.document.createElement('div');
  modal.style.position = 'fixed';
  modal.style.zIndex = '10000';
  modal.style.left = '0';
  modal.style.top = '0';
  modal.style.width = '100%';
  modal.style.height = '100%';
  modal.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
  var iframe = window.top.document.createElement('iframe');
  iframe.src = link;
  iframe.style.width = '95%';
  iframe.style.height = 'calc(95% - 30px)';
  iframe.style.border = 'none';
  iframe.style.position = 'absolute';
  iframe.style.left = '2.5%';
  iframe.style.top = 'calc(2.5% + 30px)';
  iframe.style.borderRadius = '0 0 10px 10px';



  setTimeout(function () {
    var style = document.createElement('style');
    style.textContent = css;
    iframe.contentDocument.head.appendChild(style);
  }, 1500); // 1 second delay

  iframe.addEventListener('load', function () {
    setTimeout(function () {
      var style = document.createElement('style');
      style.textContent = css;
      iframe.contentDocument.head.appendChild(style);
    }, 100);
  });

  var closeButton = window.top.document.createElement('button');
  closeButton.textContent = 'X';
  closeButton.style.position = 'absolute';
  closeButton.style.right = 'calc(0% + 5px)';
  closeButton.style.top = 'calc(0% + 5px)';
  closeButton.style.width = '30px';
  closeButton.style.height = '30px';
  closeButton.style.zIndex = '10001';
  closeButton.style.cursor = 'pointer';
  closeButton.style.borderRadius = '3px';
  closeButton.style.padding = '2px 5px';
  closeButton.style.border = 'none';
  closeButton.style.fontSize = '12px';
  closeButton.style.backgroundColor = 'lightgrey';
  closeButton.addEventListener('click', function () {
    window.top.document.body.removeChild(modal);
  });
  var header = window.top.document.createElement('div');
  header.style.width = '95%';
  header.style.height = '40px';
  header.style.position = 'absolute';
  header.style.left = '2.5%';
  header.style.top = '2.5%';
  header.style.zIndex = '999'
  header.style.backgroundColor = '#fff';
  header.style.borderRadius = '10px 10px 0 0';
  header.appendChild(closeButton);
  modal.appendChild(header);
  modal.appendChild(iframe);
  window.top.document.body.appendChild(modal);
  var newTabButton = window.top.document.createElement('button');
  newTabButton.textContent = 'Open in new tab';
  newTabButton.style.position = 'absolute';
  newTabButton.style.right = 'calc(0% + 40px)';
  newTabButton.style.top = 'calc(0% + 5px)';
  newTabButton.style.width = '100px';
  newTabButton.style.height = '30px';
  newTabButton.style.zIndex = '10001';
  newTabButton.style.cursor = 'pointer';
  newTabButton.style.borderRadius = '3px';
  newTabButton.style.padding = '2px 5px';
  newTabButton.style.border = 'none';
  newTabButton.style.fontSize = '12px';
  newTabButton.style.backgroundColor = 'lightgrey';
  newTabButton.addEventListener('click', function () {
    window.open(link, '_blank');
  });

  header.appendChild(newTabButton);
}

document.body.addEventListener('click', function (event) {
  var target = event.target;
  var link;
  if (target.tagName === 'SPAN' && target.parentNode.tagName === 'A' && !target.parentNode.classList.contains('header-link')) {
    link = target.parentNode.href;
  } else if (target.tagName === 'A' && !target.classList.contains('header-link')) {
    link = target.href;
  }

  var url = new URL(link);
  if (url.hostname === 'skoop-jira.atlassian.net') {
    event.preventDefault();
    openLinkInModal(link);
  }
});


function main() {
  // If the current window is not the top window, return immediately
  if (window !== window.top) {
    return;
  }
  // Create the navigation bar
  var navBar = document.createElement('div');
  navBar.style.height = '56px';
  navBar.style.color = 'white';
  navBar.style.display = 'flex';
  navBar.style.justifyContent = 'start';
  navBar.style.alignItems = 'center';
  navBar.style.fontSize = '14px';
  navBar.style.gap = '15px';
  navBar.style.position = 'fixed';
  navBar.style.width = 'calc(100% - 400px)';
  navBar.style.top = '0';
  navBar.style.zIndex = '1000';
  navBar.style.paddingLeft = '15px';

  var headers = {
    'My Portal': 'https://skoop-jira.atlassian.net/wiki/spaces/MP/overview?mode=global',
    'Requests': 'https://skoop-jira.atlassian.net/wiki/spaces/PREQ/overview?mode=global',
    'Clients': 'https://skoop-jira.atlassian.net/wiki/spaces/PCO/overview?mode=global',
    'Wiki': 'https://skoop-jira.atlassian.net/wiki/spaces/WIKI/overview?mode=global',
    'General': 'https://skoop-jira.atlassian.net/wiki/spaces/PGEN/overview?mode=global',
    'Tech': 'https://skoop-jira.atlassian.net/wiki/spaces/PTECH/overview?mode=global',
    'Design': 'https://skoop-jira.atlassian.net/wiki/spaces/PDES/overview?mode=global',
    'Managment': 'https://skoop-jira.atlassian.net/wiki/spaces/PMA/overview?mode=global',
    'Routines': 'https://skoop-jira.atlassian.net/wiki/spaces/PASK/overview?mode=global',
    'Products': 'https://skoop-jira.atlassian.net/wiki/spaces/PPO/overview?mode=global'
  };


  // Create header links
  for (let header in headers) {
    var a = document.createElement('a');
    a.textContent = header;
    a.href = headers[header];
    a.style.cursor = 'pointer';
    a.style.color = 'white';
    a.className = 'header-link';
    navBar.appendChild(a);
  }

  document.body.prepend(navBar);


  function replaceButtons() {
    var buttons = document.querySelectorAll('div.ap-container.conf-macro.output-block');
    buttons.forEach(function (button) {
      var url = button.querySelector('iframe').src;
      var urlMatch = url.match(/url=([^&]+)/);
      var originalUrl = urlMatch ? decodeURIComponent(urlMatch[1]) : '';
      var newButton = document.createElement('button');
      newButton.textContent = 'NEW';
      newButton.style.cursor = 'pointer';
      newButton.style.borderRadius = '3px';
      newButton.style.width = '50px';
      newButton.style.height = '26px';
      newButton.style.borderWidth = '0px';
      newButton.style.backgroundColor = 'lightblue';

      newButton.addEventListener('click', function (e) {
        e.stopPropagation();
        var modal = document.createElement('div');
        modal.style.position = 'fixed';
        modal.style.zIndex = '10000';
        modal.style.left = '0';
        modal.style.top = '0';
        modal.style.width = '100%';
        modal.style.height = '100%';
        modal.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
        var iframe = document.createElement('iframe');
        iframe.src = originalUrl;
        iframe.style.width = '70%';
        iframe.style.height = 'calc(70% - 30px)';
        iframe.style.border = 'none';
        iframe.style.position = 'absolute';
        iframe.style.left = '15%';
        iframe.style.top = 'calc(15% + 30px)';
        iframe.style.borderRadius = '0 0 10px 10px';


        setTimeout(function () {
          var style = document.createElement('style');
          style.textContent = css;
          iframe.contentDocument.head.appendChild(style);
        }, 1500); // 1 second delay

        iframe.addEventListener('load', function () {
          setTimeout(function () {
            var style = document.createElement('style');
            style.textContent = css;
            iframe.contentDocument.head.appendChild(style);
          }, 100);
        });


        var closeButton = document.createElement('button');
        closeButton.textContent = 'X';
        closeButton.style.position = 'absolute';
        closeButton.style.right = 'calc(0% + 5px)';
        closeButton.style.top = 'calc(0% + 5px)';
        closeButton.style.zIndex = '10001';
        closeButton.style.cursor = 'pointer';
        closeButton.style.borderRadius = '3px';
        closeButton.style.padding = '2px 5px';
        closeButton.style.width = '30px';
        closeButton.style.height = '30px';
        closeButton.style.fontSize = '12px';
        closeButton.style.backgroundColor = 'lightgrey';
        closeButton.style.border = 'none';
        closeButton.addEventListener('click', function () {
          document.body.removeChild(modal);
        });
        var header = document.createElement('div');
        header.style.width = '70%';
        header.style.height = '45px';
        header.style.position = 'absolute';
        header.style.left = '15%';
        header.style.top = '15%';
        header.style.zIndex = '999'
        header.style.backgroundColor = '#fff';
        header.style.borderRadius = '10px 10px 0 0';
        header.appendChild(closeButton);
        modal.appendChild(header);
        modal.appendChild(iframe);
        document.body.appendChild(modal);
        function closeModal() {
          var closeButton = iframe.contentDocument.querySelector('#issue-create-submit');
          if (closeButton) {
            closeButton.click();
          }
          setTimeout(function () {
            document.body.removeChild(modal);
            window.location.reload();
          }, 2000);
        }
        iframe.addEventListener('load', function () {
          var closeButton = iframe.contentDocument.querySelector('#issue-create-submit');
          if (closeButton) {
            closeButton.addEventListener('click', closeModal);
          }
        });
        var newTabButton = document.createElement('button');
        newTabButton.textContent = 'Open in new tab';
        newTabButton.style.position = 'absolute';
        newTabButton.style.right = 'calc(0% + 40px)';
        newTabButton.style.top = 'calc(0% + 5px)';
        newTabButton.style.width = '100px';
        newTabButton.style.height = '30px';
        newTabButton.style.zIndex = '10001';
        newTabButton.style.cursor = 'pointer';
        newTabButton.style.borderRadius = '3px';
        newTabButton.style.padding = '2px 5px';
        newTabButton.style.border = 'none';
        newTabButton.style.fontSize = '12px';
        newTabButton.style.backgroundColor = 'lightgrey';
        newTabButton.addEventListener('click', function () {
          window.open(originalUrl, '_blank');
        });

        header.appendChild(newTabButton);
      });
      button.parentNode.replaceChild(newButton, button);
    });
  }



  replaceButtons();

  var observer = new MutationObserver(function (mutationsList) {
    for (var mutation of mutationsList) {
      if (mutation.type === 'childList') {
        replaceButtons();
      }
    }
  });

  observer.observe(document.body, { childList: true, subtree: true });

  // Add CSS to the page
  setTimeout(function () {
    var link = document.createElement('link');
    link.id = 'myExtensionStyles';
    link.rel = 'stylesheet';
    link.type = 'text/css';
    link.href = chrome.extension.getURL('styles.css');
    (document.head || document.documentElement).appendChild(link);


    var tocExists = document.querySelector('.TOCFixed');
    var firstColumn = document.querySelector('[data-layout-column="true"]');
    var secondColumn = firstColumn.nextElementSibling;

    if (tocExists) {
      firstColumn.style.flexBasis = '25%';
      secondColumn.style.flexBasis = '75%';
    } else {
      firstColumn.style.flexBasis = '33.33%';
      secondColumn.style.flexBasis = '66.66%';
    }


  }, 1000);
}

function removeChanges() {
  // Remove CSS from the page
  var link = document.getElementById('myExtensionStyles');
  if (link) {
    link.parentNode.removeChild(link);
  }
}

chrome.storage.sync.get('enabled', function (data) {
  if (data.enabled !== false) {
    main();
  }
});

chrome.storage.onChanged.addListener(function (changes, namespace) {
  if (changes.enabled) {
    window.location.reload(true);
  }
});


document.body.addEventListener('submit', function (event) {
  var target = event.target;
  // Check if the form is a search form
  if (target.tagName === 'FORM' && target.querySelector('input[type="search"]')) {
    event.preventDefault(); // Prevent form from submitting normally
    var searchInput = target.querySelector('input[type="search"]');
    var searchQuery = searchInput.value;
    var searchUrl = 'https://skoop-jira.atlassian.net/wiki/search?text=' + encodeURIComponent(searchQuery);
    openLinkInModal(searchUrl); // Open the search result in your custom popup
  }
});
```

iframestyles.js:
```
var style = document.createElement('style');
style.textContent = `
.ghx-column {
  //background-color: white !important;
 // border-style: solid !important;
// border-width: 0px 1px 0px 0px !important;
//  border-color: lightgrey !important;
 // background:white !important;
 // padding-left: 0px !important;
//  padding-right: 10px !important;
//border-radius: 10px 10px 0px 0px !important;
}

.ghx-column-header-flex-1 {
    text-align: center;
    padding-top: 6px;
}

.ghx-column-headers .ghx-column {
    border-radius: 5px 5px 0px 0px !important;
}

.ghx-columns .ghx-column {
    border-radius: 0px 0px 5px 5px !important;
}

.ghx-pool {
    margin-top:-10px !important;
}

.ghx-qty {
    font-color: lightgrey !important;
}


`;
(document.head || document.documentElement).appendChild(style);




```

jira.css:
```
:root {
    --leftSidebarWidth:0px !important;
  }
  
  #ak-side-navigation {
    display: none !important;
  }

  #ak-jira-navigation {
display:none !important;
height:0px !important;

  }

  :root {
   --topNavigationHeight: 0px !important;
    //--jwm-wrapper-height: 0px !important;
    //--jwm-wrapper-padding: 0px;
}

#ak-project-view-navigation {
    display:none !important;

}

._154i14em {
  top:10px !important;
 
}


```

jira.js:
```
// Add CSS to the page after a delay of 1 second
setTimeout(function() {
    var link = document.createElement('link');
    link.rel = 'stylesheet';
    link.type = 'text/css';
    link.href = chrome.extension.getURL('jira.css');
    (document.head || document.documentElement).appendChild(link);
  }, 100);



  
```

manifest.json:
```
{
  "manifest_version": 2,
  "name": "skp-portal-format",
  "version": "1.0",
  "permissions": ["activeTab", "declarativeContent", "<all_urls>", "webNavigation", "storage"],
  "browser_action": {
    "default_popup": "popup.html"
  },
  "content_scripts": [
    {
      "matches": ["https://skoop-jira.atlassian.net/wiki/*"],
      "js": ["content.js"],
      "run_at": "document_end",
      "all_frames": true

    },
    {
      "matches": ["https://skoop-jira.atlassian.net/*"],
      "js": ["stylesall.js"],
      "run_at": "document_end",
      "all_frames": true

    },
    {
      "matches": ["https://skoop-jira.atlassian.net/*"],
      "js": ["iframeStyles.js"],
      "run_at": "document_end",
      "all_frames": true 
    }
  ],
  "web_accessible_resources": ["styles.css", "jira.css", "stylesall.css", "stylesall.js"]
}
```

popup.html:
```
<!DOCTYPE html>
<html>
  <body style="width: 200px; height: 50px;">
    <button id="toggleButton">Disable</button>
    <script src="popup.js"></script>
  </body>
</html>
```

popup.js:
```
document.getElementById('toggleButton').addEventListener('click', function() {
    chrome.storage.sync.get('enabled', function(data) {
      var enabled = !data.enabled;
      chrome.storage.sync.set({enabled: enabled});
      document.getElementById('toggleButton').innerText = enabled ? 'Disable' : 'Enable';
    });
  });
  
  chrome.storage.sync.get('enabled', function(data) {
    document.getElementById('toggleButton').innerText = data.enabled ? 'Disable' : 'Enable';
  });
```

styles.css:
```
html {
    --topNavigationHeight: 0px !important;
}

#ap-de\\.communardo\\.confluence\\.plugins\\.subspace__subspace-navigation-view-panel {
    position: fixed !important;
    top: 0 !important;
    z-index: 1000 !important;
    width: 100% !important;
}

#ap-de.communardo.confluence.plugins.subspace__subspace-navigation-view-panel {
    position: fixed !important;
    top: 0 !important;
    z-index: 1000 !important;
    width: 100% !important;
}

div[data-test-id="with-sticky-header"] {
    display: none !important;
}

div[data-test-id="app-navigation-search"] {
    z-index: 999999999999999999 !important;
}

div[data-test-id="search-dialog-input"] {
    z-index: 999999999999999999 !important;
}

#communardo-subspace-navigation-bar {
    display: none !important;
}


#embedded-de.communardo.confluence.plugins.subspace__subspace-navigation-view-panel {
    display: none !important;
}

#de.communardo.confluence.plugins.subspace__subspace-navigation-view-panel__30fc9cb0 {
    display: none !important;
}

.wrapper-space-home-page {
    margin-top: 80px !important;
}


.ak-renderer-extension {
    margin-top: 0px !important;
}

#wwdc-button {
    display: none;
}

/* Hide left sidebar in Confluence Cloud */
#AkSideNavigation {
    display: none !important;
  }

/* Hide Jira sidebar 
._kqswh2mm, ._1pbyg9ti, ._14c1glyw {
    display: none !important;
}

/* Hide Jira sidebar 
.css-1cqfw1x {
    display: none !important;
}

/* Hide Jira sidebar 
._1pbyg9ti {
    display: none !important;
}

/* Hide Jira sidebar 
._14c1glyw {
    display: none !important;
}


div[data-test-id="ContextualNavigation"] {
    display: none !important;
}

div[data-ds--page-layout--slot="left-sidebar"] {
    display: none !important;
}

/* Hide Jira left sidebar 
#jira-frontend, .ghx-navigation {
    margin-left: 0 
}

:root {
    --leftSidebarWidth:0px !important;
}


:root {
    --leftSidebarWidth:0px !important;
}


#ak-side-navigation {
    display: none !important;
}

*/




div[data-testid="title-wrapper"] {
    visibility:hidden !important;
    height:90px !important;
}

#ak-side-navigation {
    display: none !important;
}


.ak-renderer-extension-overflow-container {
    overflow-y: scroll !important;
    scrollbar-width: none !important;
    -ms-overflow-style: none !important;
}


.ak-renderer-extension-overflow-container::-webkit-scrollbar { /* WebKit */
    width: 0;
    height: 0;
}

.skpmacro {
    margin-top:14px !important;
}





 
.css-pddbfj {
    z-index: 999999999 !important;
}

.em6wsuj6 {
    z-index: 99999999999 !important;
}

.css-vtikxo {
    visibility: hidden !important;
}

.css-1nc30jc {
    display: none !important;
}


div[title="Live Search Macro"] {
  height:35px !important;
}

.search-macro-button {
    display: none;
}

.TOCFixed {
    position: fixed !important;
    top: 100px !important;
    left: 25px !important;
    height: 100vh !important;
    width: 30%; /* Adjust this value based on your layout */
    overflow-y: auto !important;
}

/* Matches elements where data-outline is a single number (e.g., "1", "2", etc.) */
.TOCFixed [data-outline]:not([data-outline*="."]) span span {
    font-size: 1.4em !important;
    font-weight: bold !important;
    color: #34454f !important;
  }
  
  /* Matches elements where data-outline contains a "." (e.g., "1.1", "2.1", etc.) */
  .TOCFixed [data-outline*="."] span span {
    font-size: 1.2em !important;
    font-weight: bold !important;
    color: #515b62 !important;
  }


  @media (max-width: 1024px) {
    .TOCFixed {
      display: none !important;
    }
  }



  

  
div[data-testid="ak-editor-main-toolbar"] {
    z-index: 2500 !important;
      }
    
```

stylesall.css:
```


```

stylesall.js:
```
setTimeout(function() {
    var collapseButton = document.querySelector('button[data-testid="ContextualNavigation-resize-button"]');
    if (collapseButton && collapseButton.getAttribute('aria-expanded') === 'true') {
        collapseButton.click();
    }
}, 500);



```
,

Above is my chrome extension.


Detailed description of the extension:
```
Title: Skp-Portal-Format Chrome Extension

Introduction:
The Skp-Portal-Format Chrome Extension is designed to enhance the user experience on the Skoop-Jira platform by modifying the appearance and functionality of the website. This extension adds a custom navigation bar, modifies the appearance of certain elements, and provides additional functionality such as opening links in a modal window.

Main Components:
1. background.js
2. content.js
3. iframestyles.js
4. jira.css
5. jira.js
6. manifest.json
7. popup.html
8. popup.js
9. styles.css
10. stylesall.css
11. stylesall.js

1. background.js:
This file is responsible for modifying the response headers of all web requests to allow cross-origin resource sharing (CORS). It listens for the 'onHeadersReceived' event and updates the 'Access-Control-Allow-Origin' header to '*' (allowing any origin).
This file modifies the response headers of all web requests to allow cross-origin resource sharing (CORS). It contains the following function:

- chrome.webRequest.onHeadersReceived.addListener(): This function listens for the 'onHeadersReceived' event and updates the 'Access-Control-Allow-Origin' header to '*' (allowing any origin). It loops through the response headers, finds the 'Access-Control-Allow-Origin' header, and sets its value to '*'. This allows the extension to access resources from any origin, which is necessary for some of the functionality provided by the extension, such as loading CSS files and handling click events.

2. content.js:
This file contains the main logic for the extension, including creating the custom navigation bar, modifying the appearance of certain elements, and handling click events to open links in a modal window. It also fetches the CSS file (jira.css) and applies it to the iframe content.
This file contains the main logic for the extension. It includes the following functions:

- openLinkInModal(link): This function takes a URL as an argument and creates a modal window with an iframe containing the content of the URL. It also adds a close button and a 'Open in new tab' button to the modal window. When the iframe content is loaded, the function applies the CSS styles from jira.css to the iframe content.

- document.body.addEventListener('click', ...): This event listener is added to the document body and listens for click events. When a click event occurs, it checks if the target element is a link (either an 'A' or 'SPAN' element within an 'A' element) and if the link's hostname is 'skoop-jira.atlassian.net'. If these conditions are met, it prevents the default link behavior and calls the openLinkInModal function with the link's href attribute.

- main(): This function is the main entry point of the extension. It checks if the current window is the top window, and if so, it creates the custom navigation bar, modifies the appearance of certain elements, and replaces the default behavior of search forms with the custom search functionality provided by the extension. It also adds the CSS styles from styles.css to the page.

- replaceButtons(): This function replaces the default buttons on the Skoop-Jira platform with custom buttons that open the associated links in a modal window. It selects all buttons with the class 'ap-container.conf-macro.output-block' and replaces them with new buttons that have an event listener for the 'click' event. When clicked, the new buttons call the openLinkInModal function with the original URL.

- removeChanges(): This function removes the CSS styles added by the extension. It is called when the extension is disabled.

- chrome.storage.sync.get(...): This function retrieves the enabled state of the extension from the Chrome storage. If the enabled state is not false, it calls the main() function.

- chrome.storage.onChanged.addListener(...): This event listener listens for changes in the Chrome storage. When the enabled state changes, it reloads the page to apply or remove the extension's changes.

- document.body.addEventListener('submit', ...): This event listener is added to the document body and listens for submit events. When a submit event occurs, it checks if the target element is a search form and prevents the default form submission behavior. It then calls the openLinkInModal function with the search URL.

3. iframestyles.js:
This file contains additional styling specific to iframes. It creates a style element containing the CSS rules and appends it to the head of the document.
This file contains additional styling specific to iframes. It includes the following:

- style: A style element containing the CSS rules for iframes. These rules are applied to elements such as the 'ghx-column', 'ghx-column-header-flex-1', 'ghx-pool', and 'ghx-qty'.

- (document.head || document.documentElement).appendChild(style): This line appends the style element to the head of the document, applying the CSS rules to the iframe content.

4. jira.css:
This file contains the CSS styles specific to the Skoop-Jira platform. These styles are applied to the main website and iframe content.

5. jira.js:
This file adds the jira.css file to the page after a delay of 1 second.

This file adds the jira.css file to the page after a delay of 1 second. It includes the following:

- setTimeout(...): This function waits for 1 second and then creates a link element with the href attribute set to the URL of the jira.css file. The link element is then appended to the head of the document, applying the CSS styles to the Skoop-Jira platform.


6. manifest.json:
This file is the manifest for the Chrome extension, containing metadata such as the extension's name, version, permissions, content scripts, and web-accessible resources.

7. popup.html:
This file contains the HTML structure for the extension's popup, which includes a toggle button to enable or disable the extension.

8. popup.js:
This file contains the JavaScript logic for the popup, handling the click event on the toggle button and updating the extension's enabled state in the Chrome storage.

9. styles.css:
This file contains the general CSS styles for the extension, which are applied to both the Skoop-Jira platform and the iframe content.

10. stylesall.css:
This file is currently empty but can be used to add additional CSS styles if needed.

11. stylesall.js:
This file contains JavaScript logic to collapse the left sidebar on the Skoop-Jira platform after a delay of 500 milliseconds.
This file contains JavaScript logic to collapse the left sidebar on the Skoop-Jira platform after a delay of 500 milliseconds. It includes the following:

- setTimeout(...): This function waits for 500 milliseconds and then selects the collapse button on the Skoop-Jira platform using the 'button[data-testid="ContextualNavigation-resize-button"]' selector. If the collapse button is found and its 'aria-expanded' attribute is set to 'true', the function clicks the button to collapse the sidebar.

Conclusion:
The Skp-Portal-Format Chrome Extension enhances the Skoop-Jira platform by providing a custom navigation bar, modifying the appearance of certain elements, and adding additional functionality such as opening links in a modal window. The extension is comprised of various JavaScript, CSS, and HTML files that work together to achieve the desired user experience.
```

Please use this description to refine and optimize the chrome extension provided in the begining. The functionality should remain the same, but the code should be more organized. Just return the file name and modifications only.
Don't worry about adding comments, just focus on things like functions which should be combined or moved to new files for better separation.  For example we should probably move many of the functions within content.js into the jirz.js or styleall.js or a new file for confluence.js to note the modifications to respective places. 